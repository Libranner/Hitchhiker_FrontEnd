= form_for @route do |f|
  - if @route.errors.any?
    #error_explanation
      %h2= "#{pluralize(@route.errors.count, "error")} prohibited this route from being saved:"
      %ul
        - @route.errors.full_messages.each do |msg|
          %li= msg
          
  .span7.pull-right.well.well-small
    %div{:id => "map_canvas", :style => "border: 1px solid black; position:absolute; height:400px;position:relative"}
    %input{:type=>"hidden", :id=>"map_points"}
    %input{:type=>"button",:onclick=>"reset()" , :value=>"Clear"}  
         
  .span4.pull-left.well.well-small
    .field
      = f.label :from
      = f.text_field :from
    .field
      = f.label :to
      = f.text_field :to
 
  .span4.pull-left.well.well-small
    %h5 Conditions
    
    =form_for :schedule do |a|
      .field
        = a.label :departure
        = a.text_field :departure
      .field
        = a.label :arrival
        = a.text_field :arrival
      .field
        = a.label :date
        = a.text_field :date
  
  .clearfix 
  .span4.pull-left.well.well-small
    %h5 Vehicle        
    .field
      = f.label :vehicle
      = render partial: "user_vehicles_listing"
           
    .field
    = f.label :available_sits
    = f.text_field :available_sits
      
      
  .clearfix 
  
  
      
   
  .actions
    = f.submit 'Save'
    
:javascript
  var directionsService = new google.maps.DirectionsService();
  var map;
  var origin = null;
  var destination = null;
  var waypoints = [];
  var markers = []; 
  
  initialize();
 
  function initialize() {
    directionsDisplay = new google.maps.DirectionsRenderer();
    var startlocation = new google.maps.LatLng(39.115677,-84.511642);
    var myOptions = {
      zoom:15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      draggableCursor: "pointer",
      center: startlocation
    }
    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
    directionsDisplay.setMap(map);
    
    google.maps.event.addListener(map, 'click', function(event) {
      if (origin == null) {
        origin = event.latLng;
        addMarker(origin);
      } else if (destination == null) {
        destination = event.latLng;
        addMarker(destination);
      } else {
        if (waypoints.length < 9) {
          waypoints.push({ location: destination, stopover: true });
          destination = event.latLng;
          addMarker(destination);
        } else {
          alert("Maximum number of waypoints reached");
        }
      }
      calcRoute();
    });
  }
 
  function addMarker(latlng) {
    markers.push(new google.maps.Marker({
      position: latlng, 
      map: map,
      icon: "http://maps.google.com/mapfiles/marker" + String.fromCharCode(markers.length + 65) + ".png"
    }));    
  }
 
  function serializeLatLng(ll) {
  return '{latitude: ' + ll.lat() + ', longitude: ' + ll.lng() + '}';
  }
 
  function calcRoute() {
    if (origin == null) {
      alert("Click on the map to add a start point");
      return;
    }
    
    if (destination == null) {
      alert("Click on the map to add an end point");
      return;
    }
    
    var mode = google.maps.DirectionsTravelMode.DRIVING;
 
    var request = {
        origin: origin,
        destination: destination,
        waypoints: waypoints,
        travelMode: mode,
        optimizeWaypoints: true,
        avoidHighways: false
    };
    
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
    var points_text = "", points_json= "", format = "raw";
    //if (document.getElementById("json").checked) {
     // format = "json";
      points_json += 'var routeCenter = ' + serializeLatLng(response.routes[0].bounds.getCenter()) + ';\n';
      points_json += 'var routeSpan = ' + serializeLatLng(response.routes[0].bounds.toSpan()) + ';\n';
      points_json += 'var routePoints = [\n'
      
      points_text += 'var routeCenter = ' + serializeLatLng(response.routes[0].bounds.getCenter()) + ';\n';
      points_text += 'var routeSpan = ' + serializeLatLng(response.routes[0].bounds.toSpan()) + ';\n';
      points_text += 'var routePoints = [\n'
   // }
    response.routes[0].bounds.getCenter.lng
    var nPoints = response.routes[0].overview_path.length;
    for (var i = 0; i < nPoints; i++) { 
      //if ( format == "json" ) {
        points_json += '\t' + serializeLatLng(response.routes[0].overview_path[i]) + (i < (nPoints - 1) ? ',\n' : '');
      //} else {
        points_text += response.routes[0].overview_path[i].lat() + ',' + response.routes[0].overview_path[i].lng() + '\n';
      //}
    }
    //if ( format == "json" ) {
      points_json += '\n];'
    //}
 
    var map_points=document.getElementById("map_points");
    map_points.value = points_json;
    clearMarkers();
      directionsDisplay.setDirections(response);
      }
    });
  }
 
  function clearMarkers() {
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
  }
  
  function clearWaypoints() {
    markers = [];
    origin = null;
    destination = null;
    waypoints = [];
  }
  
  function select_all() {
  var points_textarea=document.getElementById("points_textarea");
  points_textarea.focus();
  points_textarea.select();
  }
 
  function reset() {
    clearMarkers();
    clearWaypoints();
    directionsDisplay.setMap(null);
    directionsDisplay.setPanel(null);
    directionsDisplay = new google.maps.DirectionsRenderer();
    directionsDisplay.setMap(map);
    document.getElementById("map_points").value = '';
  }
